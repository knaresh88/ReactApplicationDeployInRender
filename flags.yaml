pipeline:
  name: pipeline
  identifier: pipeline
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: knaresh88
        repoName: ReactApplicationDeployInRender
        build: <+input>
  stages:
    - stage:
        name: build
        identifier: build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    shell: Sh
                    command: echo 'success'
              - step:
                  type: Run
                  name: Run Tests
                  identifier: run_tests
                  spec:
                    connectorRef: account.harnessImage
                    image: python:3.9
                    shell: Sh
                    command: |
                      pip install -r requirements.txt
                      python manage.py test usersApp
              - step:
                  type: Run
                  name: Install Frontend Dependencies
                  identifier: install_frontend_dependencies
                  spec:
                    connectorRef: account.harnessImage
                    image: node:14
                    shell: Sh
                    command: |
                      npm install
              - step:
                  type: Run
                  name: Build Frontend
                  identifier: build_frontend
                  spec:
                    connectorRef: account.harnessImage
                    image: node:14
                    shell: Sh
                    command: |
                      npm run build
              - step:
                  type: Run
                  name: Run Frontend Tests
                  identifier: run_frontend_tests
                  spec:
                    connectorRef: account.harnessImage
                    image: node:14
                    shell: Sh
                    command: |
                      npm test
              - step:
                  type: Run
                  name: Deploy Backend
                  identifier: deploy_backend
                  spec:
                    shell: Sh
                    command: |
                      curl -X POST \
                        -H "Authorization: Bearer <+secrets.getValue("RENDER_API_KEY")>" \
                        -H "Content-Type: application/json" \
                        -d '{"serviceId": "srv-cp6esqjtg9os73a7ku8g"}' \
                        https://api.render.com/v1/services/srv-cp6esqjtg9os73a7ku8g/deploys
              - step:
                  type: Run
                  name: Deploy Frontend
                  identifier: deploy_frontend
                  spec:
                    shell: Sh
                    command: |
                      curl -X POST \
                        -H "Authorization: Bearer <+secrets.getValue("RENDER_API_KEY")>" \
                        -H "Content-Type: application/json" \
                        -d '{"serviceId": "srv-cp6ffp3tg9os73a7umdg"}' \
                        https://api.render.com/v1/services/srv-cp6ffp3tg9os73a7umdg/deploys
              - step:
                  type: Run
                  name: push to prod
                  identifier: push_to_prod
                  spec:
                    shell: Sh
                    command: |-
                      git config --global user.email "nareshkummaripydev88@gmail.com"
                      git config --global user.name "knaresh88"
                      git fetch --all && git checkout prod &&
                      git merge origin/dev &&
                      git push https://<+secrets.getValue("GIT_USERNAME")>:<+secrets.getValue("GIT_PASSWORD")>@github.com/knaresh88/ReactApplicationDeployInRender.git prod ||
                      echo "Error: Failed to move changes to prod branch"
